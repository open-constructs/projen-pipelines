// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Gitlab snapshot 1`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  synth:
    name: Synth CDK application
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: synthRole
          role-session-name: GitHubAction
          aws-region: us-east-1
      - run: npx projen install:ci
      - run: npx projen build
      - uses: actions/upload-artifact@v3
        with:
          name: cloud-assembly
          path: cdk.out/
  assetUpload:
    name: Publish assets to AWS
    needs: synth
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup GIT identity
        run: git config --global user.name "github-actions" && git config --global user.email "github-actions@github.com"
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: publishRole
          role-session-name: GitHubAction
          aws-region: us-east-1
      - uses: actions/download-artifact@v3
        with:
          name: cloud-assembly
          path: cdk.out/
      - run: npx projen install:ci
      - run: npx projen publish:assets
      - run: npx projen bump
      - run: npx projen release:push-assembly
  deploy-dev:
    name: Deploy stage dev to AWS
    needs: assetUpload
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: devRole
          role-session-name: GitHubAction
          aws-region: eu-central-1
      - uses: actions/download-artifact@v3
        with:
          name: cloud-assembly
          path: cdk.out/
      - run: npx projen install:ci
      - run: npx projen deploy:dev
"
`;

exports[`Gitlab snapshot 2`] = `
"# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: release-prod
on:
  workflow_dispatch:
    inputs:
      version:
        description: Package version
        required: true
jobs:
  deploy:
    name: Release stage prod to AWS
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: prodRole
          role-session-name: GitHubAction
          aws-region: eu-central-1
      - run: npx projen install:ci
      - run: yarn add @assembly/testapp@\${{github.event.inputs.version}}
      - run: mv ./node_modules/@assembly/testapp cdk.out
      - run: npx projen deploy:prod
"
`;

exports[`Gitlab snapshot 3`] = `
{
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
  "dependencies": {
    "aws-cdk-lib": "^2.102.0",
    "constructs": "^10.0.5",
  },
  "devDependencies": {
    "@types/jest": "*",
    "@types/node": "^16",
    "@types/standard-version": "*",
    "@typescript-eslint/eslint-plugin": "^6",
    "@typescript-eslint/parser": "^6",
    "aws-cdk": "^2.102.0",
    "cdk-assets": "*",
    "esbuild": "*",
    "eslint": "^8",
    "eslint-import-resolver-node": "*",
    "eslint-import-resolver-typescript": "*",
    "eslint-plugin-import": "*",
    "jest": "*",
    "jest-junit": "^15",
    "npm-check-updates": "^16",
    "projen": "*",
    "standard-version": "*",
    "ts-jest": "*",
    "ts-node": "*",
    "typescript": "*",
  },
  "jest": {
    "clearMocks": true,
    "collectCoverage": true,
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": [
      "/node_modules/",
    ],
    "coverageReporters": [
      "json",
      "lcov",
      "clover",
      "cobertura",
      "text",
    ],
    "globals": {
      "ts-jest": {
        "tsconfig": "tsconfig.dev.json",
      },
    },
    "preset": "ts-jest",
    "reporters": [
      "default",
      [
        "jest-junit",
        {
          "outputDirectory": "test-reports",
        },
      ],
    ],
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.ts?(x)",
      "<rootDir>/(test|src)/**/*(*.)@(spec|test).ts?(x)",
    ],
    "testPathIgnorePatterns": [
      "/node_modules/",
    ],
    "watchPathIgnorePatterns": [
      "/node_modules/",
    ],
  },
  "license": "Apache-2.0",
  "name": "testapp",
  "scripts": {
    "build": "npx projen build",
    "bump": "npx projen bump",
    "bundle": "npx projen bundle",
    "clobber": "npx projen clobber",
    "compile": "npx projen compile",
    "default": "npx projen default",
    "deploy:dev": "npx projen deploy:dev",
    "deploy:prod": "npx projen deploy:prod",
    "diff:dev": "npx projen diff:dev",
    "diff:prod": "npx projen diff:prod",
    "eject": "npx projen eject",
    "eslint": "npx projen eslint",
    "package": "npx projen package",
    "post-compile": "npx projen post-compile",
    "post-upgrade": "npx projen post-upgrade",
    "pre-compile": "npx projen pre-compile",
    "projen": "npx projen",
    "publish:assets": "npx projen publish:assets",
    "release:push-assembly": "npx projen release:push-assembly",
    "synth": "npx projen synth",
    "synth:silent": "npx projen synth:silent",
    "test": "npx projen test",
    "test:watch": "npx projen test:watch",
    "upgrade": "npx projen upgrade",
  },
  "version": "0.0.0",
}
`;
