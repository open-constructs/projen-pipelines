// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Bash snapshot 1`] = `
Object {
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \\"npx projen\\".",
  "dependencies": Object {
    "aws-cdk-lib": "^2.102.0",
    "constructs": "^10.0.5",
  },
  "devDependencies": Object {
    "@types/jest": "*",
    "@types/node": "^18",
    "@types/standard-version": "*",
    "@typescript-eslint/eslint-plugin": "^6",
    "@typescript-eslint/parser": "^6",
    "aws-cdk": "^2.102.0",
    "cdk-assets": "*",
    "esbuild": "*",
    "eslint": "^8",
    "eslint-import-resolver-typescript": "*",
    "eslint-plugin-import": "*",
    "jest": "*",
    "jest-junit": "^15",
    "projen": "*",
    "standard-version": "*",
    "ts-jest": "*",
    "ts-node": "*",
    "typescript": "*",
  },
  "jest": Object {
    "clearMocks": true,
    "collectCoverage": true,
    "coverageDirectory": "coverage",
    "coveragePathIgnorePatterns": Array [
      "/node_modules/",
    ],
    "coverageReporters": Array [
      "json",
      "lcov",
      "clover",
      "cobertura",
      "text",
    ],
    "reporters": Array [
      "default",
      Array [
        "jest-junit",
        Object {
          "outputDirectory": "test-reports",
        },
      ],
    ],
    "testMatch": Array [
      "<rootDir>/src/**/__tests__/**/*.ts?(x)",
      "<rootDir>/(test|src)/**/*(*.)@(spec|test).ts?(x)",
    ],
    "testPathIgnorePatterns": Array [
      "/node_modules/",
    ],
    "transform": Object {
      "^.+\\\\.[t]sx?$": Array [
        "ts-jest",
        Object {
          "tsconfig": "tsconfig.dev.json",
        },
      ],
    },
    "watchPathIgnorePatterns": Array [
      "/node_modules/",
    ],
  },
  "license": "Apache-2.0",
  "name": "testapp",
  "scripts": Object {
    "build": "npx projen build",
    "bump": "npx projen bump",
    "bundle": "npx projen bundle",
    "clobber": "npx projen clobber",
    "compile": "npx projen compile",
    "default": "npx projen default",
    "deploy:dev": "npx projen deploy:dev",
    "deploy:personal": "npx projen deploy:personal",
    "deploy:prod": "npx projen deploy:prod",
    "destroy:personal": "npx projen destroy:personal",
    "diff:dev": "npx projen diff:dev",
    "diff:personal": "npx projen diff:personal",
    "diff:prod": "npx projen diff:prod",
    "eject": "npx projen eject",
    "eslint": "npx projen eslint",
    "package": "npx projen package",
    "post-compile": "npx projen post-compile",
    "post-upgrade": "npx projen post-upgrade",
    "pre-compile": "npx projen pre-compile",
    "projen": "npx projen",
    "publish:assets": "npx projen publish:assets",
    "release:push-assembly": "npx projen release:push-assembly",
    "synth": "npx projen synth",
    "synth:silent": "npx projen synth:silent",
    "test": "npx projen test",
    "test:watch": "npx projen test:watch",
    "upgrade": "npx projen upgrade",
    "watch:personal": "npx projen watch:personal",
  },
  "version": "0.0.0",
}
`;

exports[`Bash snapshot 2`] = `
"# How to run your pipeline

## Build phase

Synthesize your CDK project:
\`\`\`bash
npx projen install:ci
npx projen build
\`\`\`

Publish all your CDK assets like Lambda function code and container images:
\`\`\`bash
npx projen install:ci
npx projen publish:assets
\`\`\`

If you want to store your cloud assembly and assets for future use or compliance reasons, use:
\`\`\`bash
npx projen install:ci
npx projen publish:assets
npx projen bump
npx projen release:push-assembly
\`\`\`

## Deployment phase

For every stage some scripts are generated for diff and deploy

Stage: dev
\`\`\`bash
npx projen diff:dev

npx projen deploy:dev
\`\`\`

Stage: prod
\`\`\`bash
npx projen diff:prod

npx projen deploy:prod
\`\`\`

The stage \`personal\` is meant to be deployed manually by the developer and also has a watch script for live updates.
\`\`\`bash
npx projen diff:personal
npx projen deploy:personal
npx projen destroy:personal
npx projen watch:personal
\`\`\`

The stage \`feature\` is meant to be deployed for feature branches.
\`\`\`bash
npx projen diff:feature
npx projen deploy:feature
npx projen destroy:feature
\`\`\`
"
`;
